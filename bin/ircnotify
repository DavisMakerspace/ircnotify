#!/usr/bin/env ruby

require 'yaml'
require 'cinch'
require 'socket'
require 'etc'

config_file = ARGV.shift || File.join(File.dirname($0), "..", "etc", "config.yml")
if not File.exists? config_file
  puts "Can't find config file #{config_file}"
  puts "Either create it or specify another config file with: #{File.basename $0} [filename]"
  exit
end
$config = YAML.load_file config_file
$ver=%x{git describe}.strip

bot = Cinch::Bot.new do
  configure do |c|
    c.user = "ircnotify"
    c.realname = "ircnotify"
    c.nick = $config['irc']['nick']
    c.server = $config['irc']['server']
    c.port = $config['irc']['port']
    c.channels = $config['irc']['channels']
  end
  helpers do
    def respond(msg, query)
      msg.reply "ircnotify #{$ver} listening on #{@unixserver.path}"
    end
  end
  on :connect do
    self.bot.on :channel, /^#{self.bot.nick}(?:[:, ] *(.*)|$)/ do |m, q|
      respond m, q
    end
    if File.socket?($config['socket']['path']) then File.delete($config['socket']['path']) end
    @unixserver = UNIXServer.new($config['socket']['path'])
    while a = @unixserver.accept do
      Thread.new do
        a.each {|line| self.bot.channels.each {|c| c.send "[#{Etc.getpwuid(a.getpeereid[0]).name}] #{line}" } }
      end
    end
  end
  on :disconnect do
    @unixserver.shutdown
    @unixserver = nil
    File.delete($config['socket']['path'])
  end
  on :private do |m|
    if m.command == "PRIVMSG" && m.user
      respond m, m.message
    end
  end
end

bot.start
